// Generated by CoffeeScript 1.8.0
(function() {
  var BACKUP_RDB_PATH, REDIS_RDB_NAME, REDIS_RDB_PATH, assert, child_process, dateFormat, debuglog, fs, init, mkdirp, os, path, start, uploadUtil, _;

  _ = require('underscore');

  debuglog = require("debug")("redis-backups::backup_util");

  fs = require("fs");

  path = require("path");

  os = require("os");

  child_process = require("child_process");

  assert = require("assert");

  dateFormat = require('dateformat');

  mkdirp = require("mkdirp");

  uploadUtil = require('./upload_util');

  REDIS_RDB_PATH = null;

  REDIS_RDB_NAME = null;

  BACKUP_RDB_PATH = null;

  init = function(config) {
    REDIS_RDB_PATH = config.redisRdbPath;
    REDIS_RDB_NAME = config.redisRdbName;
    assert(REDIS_RDB_PATH, "missing REDIS_RDB_PATH");
    assert(fs.existsSync("" + REDIS_RDB_PATH + "/" + REDIS_RDB_NAME), "bad file path to redis rdb");
    BACKUP_RDB_PATH = config.backupPath;
    return mkdirp.sync(BACKUP_RDB_PATH);
  };

  start = function(callback) {
    var cmd, date, envObj, sourceFile;
    date = dateFormat(new Date(), "yyyymmddHHMMss");
    sourceFile = "" + BACKUP_RDB_PATH + "/redisBuck_" + date + ".tar.gz";
    cmd = "cd " + REDIS_RDB_PATH + " && tar -czf " + sourceFile + " " + REDIS_RDB_NAME;
    debuglog("cmd: " + cmd);
    envObj = {
      cwd: REDIS_RDB_PATH
    };
    child_process.exec(cmd, function(err, stdout, stderr) {
      if (err != null) {
        return callback(err);
      }
      uploadUtil.upload(sourceFile, callback);
    });
  };

  module.exports = {
    init: init,
    start: start
  };

}).call(this);
